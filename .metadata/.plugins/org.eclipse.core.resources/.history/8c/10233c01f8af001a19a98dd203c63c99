package StreamApi;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;

public class PrintEvenNumberFromList {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("Q1) Find Even number from List ");	
		List<Integer> list=Arrays.asList(2,3,4,5,9,12,10,8);
		System.out.println("List of Array : " +list);
			
		//here filter will give you boolean value ,if  you the value then first collect data using collect() 
		//method and in parameter pass data Type in which you want to convert
		List<Integer> evenList=list.stream().filter(i->i%2==0).collect(Collectors.toList());
		//System.out.println(list.stream().filter(i->i%2==0).collect(Collectors.toSet()));
		long count=list.stream().filter(i->i%2==0).count();
		System.out.println("List of Even List : "+evenList);
		System.out.println("Total count :" +count);
		
		System.out.println("Q2) Double the number in list");
		List<Integer> doubleNumber=list.stream().map(I->I*2).collect(Collectors.toList());
		System.out.println("Double of Number "+doubleNumber);
		
		System.out.println("Q3) How to Sort list ");
		//By default Sort element is acceding order
		List<Integer> sortedList=list.stream().sorted().collect(Collectors.toList());

		System.out.println("Sorted list is "+sortedList);
		System.out.println("Q4) Sort using comperator ");
		List<Integer> sortListByComparator=list.stream().sorted((i1,i2)->i1.compareTo(i2)).collect(Collectors.toList());
		System.out.println("Sorted List "+sortListByComparator);
	
		System.out.println("Q5)print ths list in reverse order using comperator ");
		List<Integer> reverseListByComparator=list.stream().sorted((i1,i2)->-i1.compareTo(i2)).collect(Collectors.toList());
		System.out.println("Sorted List "+reverseListByComparator);
		//we can reverse using to method
		//1) (i1,i2)->-i1.compareTo(i2)
		//2)(i1,i2)->i2.compareTo(i1))
		
		System.out.println("Q6)Find min value from list ");
		int min=list.stream().min((i1,i2)->i1.compareTo(i2)).get();
		System.out.println("Min value in list is: "+min);
		
		System.out.println("Q7)Find max value from list ");
		int max=list.stream().max((i1,i2)->i1.compareTo(i2)).get();
		System.out.println("Min value in list is: "+max);

		
	}

}

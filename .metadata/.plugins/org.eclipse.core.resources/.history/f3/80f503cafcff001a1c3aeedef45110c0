package shallowAndDeepCloaning;
/*
 * Deep copy of an object will have exact copy of all the fields of original object just like shallow copy.
 *  But in additional, if original object has any references to other objects as fields, then copy of those objects
 *   are also created by calling clone() method on them. That means clone object and original object will be 100% disjoint.
 *    They will be 100% independent of each other. Any changes made to clone object will not be reflected in original object or vice-versa.
 * */
class Course1
{
    String subject1;
 
    String subject2;
 
    String subject3;
 
    public Course1(String sub1, String sub2, String sub3)
    {
        this.subject1 = sub1;
 
        this.subject2 = sub2;
 
        this.subject3 = sub3;
    }

	@Override
	public String toString() {
		return "Course [subject1=" + subject1 + ", subject2=" + subject2 + ", subject3=" + subject3 + "]";
	}
    
}
 
class Student1 implements Cloneable
{
    int id;
 
    String name;
 
    Course1 course;
 
    public Student1(int id, String name, Course1 course1)
    {
        this.id = id;
 
        this.name = name;
 
        this.course = course1;
    }

	@Override
	public String toString() {
		return "Student [id=" + id + ", name=" + name + ", course=" + course + "]";
	}
    
 
 
    protected Object clone() throws CloneNotSupportedException
    {
    	Student1 student=(Student1) super.clone();
    	student.course=(Course)super.clone();
        return super.clone();
    }
}

public class DeepCloaning {
	public static void main(String[] args) {
		Course course=new Course("Maths", "physics", "Java");
		Student stud1=new Student(101, "Shashi", course);
		System.out.println("Student 1 "+stud1);
		System.out.println("Student 1 hashcode ="+stud1.hashCode());
		System.out.println("Student 1 subject1 "+stud1.course.subject1);
		Student stud2=null;
		try {
			 stud2=(Student)stud1.clone();
			
			System.out.println("Student 2 "+stud2);
			System.out.println("Student 2 hashcode="
					+ ""+stud2.hashCode());
			System.out.println("Student 2 subject1 "+stud2.course.subject1);
		} catch (CloneNotSupportedException e) {
		
			e.printStackTrace();
		}
		
		//if we made changes in object it will reflect in both object as 
		
		stud1.course.subject1="Python";
		
		System.out.println(stud1.course.subject1);
		System.out.println(stud2.course.subject1);
	}

}
